{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec62cd15.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Header = () => {\n  return (\n    <div>\n      <h1>Expense Tracker</h1>\n    </div>\n  );\n};\n","export default (state, action) => {\n    switch (action.type) {\n      case \"DELETE_TRANSACTION\":\n        return {\n          ...state,\n          transactions: state.transactions.filter(\n            (transaction) => transaction.id !== action.payload\n          )\n        };\n      case \"ADD_TRANSACTION\":\n        return {\n          ...state,\n          transactions: [action.payload, ...state.transactions]\n        };\n      default:\n        return state;\n    }\n  };\n  ","import React, { createContext, useReducer } from \"react\";\nimport AppReducer from \"./AppReducer\";\n\nconst initialState = {\n  transactions: []\n};\n\n// Create context\nexport const GlobalContext = createContext(initialState);\n\n//Provider Components\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  // Actions\n  function deleteTransaction(id) {\n    dispatch({\n      type: \"DELETE_TRANSACTION\",\n      payload: id\n    });\n  }\n\n  function addTransaction(transaction) {\n    dispatch({\n      type: \"ADD_TRANSACTION\",\n      payload: transaction\n    });\n  }\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        transactions: state.transactions,\n        deleteTransaction,\n        addTransaction\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const Balance = () => {\n  const { transactions } = useContext(GlobalContext);\n  const amounts = transactions.map((transaction) => transaction.amount);\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n  return (\n    <div>\n      <h4>Your Balance</h4>\n      <h1>${total}</h1>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const IncomeExpenses = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map((transaction) => transaction.amount);\n\n  const income = amounts\n    .filter((item) => item > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  const expense = (\n    amounts.filter((item) => item < 0).reduce((acc, item) => (acc += item), 0) *\n    -1\n  ).toFixed(2);\n  return (\n    <div className=\"inc-exp-container\">\n      <div>\n        <h4>Income</h4>\n        <p className=\"money plus\">${income}</p>\n      </div>\n      <div>\n        <h4>Expense</h4>\n        <p className=\"money minus\">${expense}</p>\n      </div>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const Transaction = ({ transaction }) => {\n  const { deleteTransaction } = useContext(GlobalContext);\n\n  const sign = transaction.amount < 0 ? \"-\" : \"+\";\n  return (\n    <li className={transaction.amount < 0 ? \"minus\" : \"plus\"}>\n      {transaction.text}{\" \"}\n      <span>\n        {sign}${Math.abs(transaction.amount)}\n      </span>\n      <button\n        className=\"delete-btn\"\n        onClick={() => deleteTransaction(transaction.id)}\n      >\n        x\n      </button>\n    </li>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { Transaction } from \"./Transaction\";\n\nexport const TransactionList = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  return (\n    <>\n      <h3>History</h3>\n      <ul className=\"list\">\n        {transactions.map((transaction) => (\n          <Transaction key={transaction.id} transaction={transaction} />\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState, useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const AddTransaction = () => {\n  const [text, setText] = useState(\"\");\n  const [amount, setAmount] = useState();\n\n  const { addTransaction } = useContext(GlobalContext);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    const newTransaction = {\n      id: Math.floor(Math.random() * 100000000),\n      text,\n      amount: +amount\n    };\n    addTransaction(newTransaction);\n  };\n\n  return (\n    <>\n      <h3>Add new transaction</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-control\">\n          <label htmlFor=\"text\">Text</label>\n          <input\n            type=\"text\"\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n            placeholder=\"Enter text...\"\n          />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\">\n            Amount <br />\n            (negative - expense, positive - income)\n          </label>\n          <input\n            type=\"number\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n            placeholder=\"Enter amount...\"\n          />\n        </div>\n        <button className=\"btn\">Add transaction</button>\n      </form>\n    </>\n  );\n};\n","import \"./App.css\";\nimport React from \"react\";\nimport { Header } from \"./components/Header\";\nimport { Balance } from \"./components/Balance\";\nimport { IncomeExpenses } from \"./components/IncomeExpenses\";\nimport { TransactionList } from \"./components/TransactionList\";\nimport { AddTransaction } from \"./components/AddTransaction\";\nimport { GlobalProvider } from \"./context/GlobalState\";\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}